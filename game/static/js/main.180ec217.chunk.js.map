{"version":3,"sources":["state.js","utils.js","cycle.js","components/Bubble.jsx","components/Surface.jsx","components/Bullet.jsx","components/Wave.jsx","components/Field.jsx","components/WaterCircles.jsx","components/Score.jsx","App.js","index.js"],"names":["preferences","maxSpeed","accel","friction","brakeCoef","bounceK","rotateSpeed","THREE","degToRad","skiddingC","radiusPerBall","minBubbleRadius","maxBallsCount","bulletRadius","bRadiusCoef","fieldW","fieldH","radIncrease","gateWidth","shot","reloadingTime","gravity","speed","angle","bubbleColors","bulletColors","crossHairColors","initPStates","1","moveDir","lookDir","position","balls","shots","shotsReloading","curSpeed","2","state","players","bullets","keysPressed","left","right","up","down","score","resetPlayerState","pId","initState","Object","keys","forEach","key","val","newVal","constructor","clone","getBubbleRadius","ballsCount","keyDown","e","keyCode","keyUp","movePlayer","tDiff","setScore","applyEuler","angleTo","copy","alfa","lerp","d","radius","rightBorder","leftBorder","upBorder","bottBorder","newX","x","setX","y","newY","setY","winZone","newPos3","pos2","containsPoint","console","log","tryShot","forceUpdate","extraBalls","extraSize","push","id","uuid","startPos","startTime","performance","now","dir","playerId","stale","updateReloadings","reloadings","map","time","newT","filter","t1","mainCycle","t2","updateIsNeeded","bullet","z","i","curTime","shotTDiff","moveVector","multiplyScalar","Math","cos","add","sin","moveBullet","enemyId","bulletPos","bulletR","enemyPos","enemyR","distanceTo","shooterId","enemy","enemyR_","diff","abs","bulletCollision","CrossHair","React","memo","color","len","ref","useRef","useFrame","current","rotation","attach","args","transparent","opacity","wireframe","Bubble","curBalls","useState","setRadius","mesh","quaternion","setFromUnitVectors","normalize","newR","receiveShadow","Surface","window","innerWidth","innerHeight","Bullet","curRadius","castShadow","getRandomFloat","min","max","random","randPosition","Wave","size","floor","rands","setRands","setOpacity","initOpacity","nextOpacity","setNextOpacity","toZero","switchOpacityDir","delta","step","Border","start","end","negOffset","gate","useEffect","sub","xDir","gateOffset","geometry","translate","width","Field","p1","p2","p3","p4","gateBot","gateUp","WaterCircles","r1","r2","c1NextState","setC1NextState","c2NextState","setC2NextState","visible","setVisibility","setPosition","st","c1step","c2step","c1Opacity","c1R1","c1R2","c2Opacity","c2R1","c2R2","Score","className","style","App","prefs","useCallback","useForceUpdate","prop","addEffect","addEventListener","height","camera","fov","onCreated","lookAt","shadowMap","intensity","distance","skyColor","groundColor","colorSurf","color1","color2","idx","Array","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.180ec217.chunk.js","sourcesContent":["import * as THREE from \"three\";\r\n\r\nexport const preferences = {\r\n  maxSpeed: 70, // Meters per second.\r\n  accel: 10,\r\n  friction: 0.2, // Decrease curSpeed in 'friction' times each second.\r\n  brakeCoef: 1,\r\n  bounceK: 0.5, // Decrease curSpeed after hiting the border\r\n  rotateSpeed: THREE.Math.degToRad(90),\r\n  skiddingC: 0.8, // Should be dependent on player weight\r\n  radiusPerBall: 1.5,\r\n  minBubbleRadius: 2,\r\n  maxBallsCount: 7,\r\n  bulletRadius: 2,\r\n  bRadiusCoef: 2,\r\n  fieldW: 350, // Meters\r\n  fieldH: 250, // Meters\r\n  radIncrease: 4,\r\n  gateWidth: 15.5,\r\n  shot: {\r\n    reloadingTime: 8, // sec.\r\n    //// Look from up case:\r\n    // gravity: 850,\r\n    // speed: 550, // m/s\r\n    // angle: THREE.Math.degToRad(80),\r\n\r\n    //// Angle look:\r\n    gravity: 250,\r\n    speed: 170, // m/s\r\n    angle: THREE.Math.degToRad(60),\r\n\r\n    //// Testing:\r\n    // gravity: 250,\r\n    // speed: 230, // m/s\r\n    // angle: THREE.Math.degToRad(45),\r\n  },\r\n  bubbleColors: ['#DB4A4A', '#54915F'],\r\n  bulletColors: ['#DB4A4A', '#54915F'],\r\n  crossHairColors: ['#ff0088', '#00ff2e']\r\n}\r\n\r\nconst initPStates = {\r\n  1: {\r\n    moveDir: new THREE.Vector3(0, 1, 0),\r\n    lookDir: new THREE.Vector3(-1, 0, 0),\r\n    position: new THREE.Vector3(100, 0, 0),\r\n    balls: preferences.maxBallsCount,\r\n    shots: preferences.maxBallsCount,\r\n    shotsReloading: [], // Array with times when shot should be reloaded.\r\n    curSpeed: 0,\r\n  },\r\n  2: {\r\n    moveDir: new THREE.Vector3(0, 1, 0),\r\n    lookDir: new THREE.Vector3(1, 0, 0),\r\n    position: new THREE.Vector3(-100, 0, 0),\r\n    balls: preferences.maxBallsCount,\r\n    shots: preferences.maxBallsCount,\r\n    shotsReloading: [], // Array with times when shot should be reloaded.\r\n    curSpeed: 0,\r\n  }\r\n}\r\n\r\nexport const state = {\r\n  players: {\r\n    1: {},\r\n    2: {},\r\n  },\r\n  bullets: [],\r\n  keysPressed: {\r\n    1: {\r\n      left: false,\r\n      right: false,\r\n      up: false,\r\n      down: false,\r\n      shot: false,\r\n    },\r\n    2: {\r\n      left: false,\r\n      right: false,\r\n      up: false,\r\n      down: false,\r\n      shot: false,\r\n    },\r\n  },\r\n  score: [0, 0]\r\n}\r\n\r\nfunction resetPlayerState(pId) {\r\n  const initState = initPStates[pId]\r\n  Object.keys(initState).forEach(key => {\r\n    const val = initState[key]\r\n    const newVal = val.constructor === THREE.Vector3 ? val.clone() : val\r\n    state.players[pId][key] = newVal\r\n  })\r\n}\r\n\r\nresetPlayerState(1)\r\nresetPlayerState(2)\r\n\r\nexport function resetState() {\r\n  resetPlayerState(1)\r\n  resetPlayerState(2)\r\n}\r\n","import { state, preferences } from './state'\r\n\r\nexport function getBubbleRadius(ballsCount) {\r\n  return preferences.minBubbleRadius + ballsCount * preferences.radiusPerBall\r\n}\r\n\r\nexport const keyDown = e => {\r\n  // console.log('keyCode: ', e.keyCode)\r\n  switch (e.keyCode) {\r\n    case 13: // enter\r\n      state.keysPressed[1].shot = true;\r\n      return;\r\n    case 39:\r\n      state.keysPressed[1].right = true;\r\n      return;\r\n    case 37:\r\n      state.keysPressed[1].left = true;\r\n      return;\r\n    case 38:\r\n      state.keysPressed[1].up = true;\r\n      return;\r\n    case 40:\r\n      state.keysPressed[1].down = true;\r\n      return;\r\n\r\n    case 84: //t\r\n      state.keysPressed[2].shot = true;\r\n      return;\r\n    case 68:\r\n      state.keysPressed[2].right = true\r\n      return\r\n    case 65:\r\n      state.keysPressed[2].left = true\r\n      return\r\n    case 87:\r\n      state.keysPressed[2].up = true\r\n      return\r\n    case 83:\r\n      state.keysPressed[2].down = true\r\n      return\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nexport const keyUp = e => {\r\n  switch (e.keyCode) {\r\n    case 39:\r\n      state.keysPressed[1].right = false;\r\n      return;\r\n    case 37:\r\n      state.keysPressed[1].left = false;\r\n      return;\r\n    case 38:\r\n      state.keysPressed[1].up = false;\r\n      return;\r\n    case 40:\r\n      state.keysPressed[1].down = false;\r\n      return;\r\n    case 68:\r\n      state.keysPressed[2].right = false\r\n      return\r\n    case 65:\r\n      state.keysPressed[2].left = false\r\n      return\r\n    case 87:\r\n      state.keysPressed[2].up = false\r\n      return\r\n    case 83:\r\n      state.keysPressed[2].down = false\r\n      return\r\n    default:\r\n      return;\r\n  }\r\n}\r\n","import * as THREE from \"three\";\r\n\r\nimport { state, preferences, resetState as resetPlayers } from './state'\r\nimport { getBubbleRadius } from \"./utils\";\r\nimport uuid from 'uuid/v1';\r\n\r\nfunction movePlayer(pId, tDiff, setScore) {\r\n  const { right, left, up, down } = state.keysPressed[pId];\r\n  const { maxSpeed, accel, friction, rotateSpeed, skiddingC } = preferences;\r\n\r\n  let curSpeed = state.players[pId].curSpeed;\r\n  if (right) {\r\n    state.players[pId].lookDir.applyEuler(new THREE.Euler(0, 0, -rotateSpeed * tDiff))\r\n  }\r\n  if (left) {\r\n    state.players[pId].lookDir.applyEuler(new THREE.Euler(0, 0, rotateSpeed * tDiff))\r\n  }\r\n\r\n  if (up) {\r\n    const { lookDir, moveDir } = state.players[pId]\r\n    if (curSpeed + accel <= maxSpeed) {\r\n      state.players[pId].curSpeed += accel * tDiff;\r\n    }\r\n\r\n    if (lookDir.angleTo(moveDir) < 0.02) {\r\n      state.players[pId].moveDir.copy(lookDir)\r\n    } else {\r\n      let alfa = curSpeed < 10 ? 1 : skiddingC * tDiff\r\n      state.players[pId].moveDir.lerp(lookDir, alfa)\r\n    }\r\n  } else if (down) {\r\n    const d = state.players[pId].curSpeed * preferences.brakeCoef * tDiff\r\n    if (state.players[pId].curSpeed - d < 0 || d < 0.01) state.players[pId].curSpeed = 0\r\n    else state.players[pId].curSpeed -= d\r\n  } else if (!up && !down) {\r\n    const d = state.players[pId].curSpeed * friction * tDiff\r\n    if (state.players[pId].curSpeed - d < 0 || d < 0.01) state.players[pId].curSpeed = 0\r\n    else state.players[pId].curSpeed -= d\r\n  }\r\n\r\n  const { position, moveDir, balls } = state.players[pId]\r\n  const radius = getBubbleRadius(balls)\r\n  curSpeed = state.players[pId].curSpeed\r\n\r\n  const rightBorder = preferences.fieldW / 2\r\n  const leftBorder = -rightBorder\r\n  const upBorder = preferences.fieldH / 2\r\n  const bottBorder = - upBorder\r\n\r\n  const newX = position.x + curSpeed * tDiff * moveDir.x\r\n  if (newX + radius < rightBorder && newX - radius > leftBorder) {\r\n    state.players[pId].position.setX(newX)\r\n  } else if (\r\n    radius <= preferences.minBubbleRadius + preferences.radiusPerBall * 4 &&\r\n    state.players[pId].position.y + radius < preferences.gateWidth / 2 &&\r\n    state.players[pId].position.y - radius > -preferences.gateWidth / 2) {\r\n    // If radius is small enough allow to move through the gate\r\n    state.players[pId].position.setX(newX)\r\n  } else {\r\n    state.players[pId].moveDir.x *= -1\r\n    state.players[pId].curSpeed *= preferences.bounceK\r\n  }\r\n\r\n  const newY = position.y + curSpeed * tDiff * moveDir.y\r\n  if (newY + radius < upBorder && newY - radius > bottBorder) {\r\n    state.players[pId].position.setY(newY)\r\n  } else {\r\n    state.players[pId].moveDir.y = -state.players[pId].moveDir.y\r\n    state.players[pId].curSpeed *= preferences.bounceK\r\n  }\r\n\r\n  // Check if player win.\r\n  const winMaxDepth = 40\r\n  const winMinDepth = 1\r\n  const winZone = new THREE.Box2(\r\n    new THREE.Vector2(-preferences.fieldW / 2 - winMaxDepth, -30),\r\n    new THREE.Vector2(-preferences.fieldW / 2 - winMinDepth, 30),\r\n  )\r\n  const newPos3 = state.players[pId].position\r\n  const pos2 = new THREE.Vector2(newPos3.x, newPos3.y)\r\n  if (winZone.containsPoint(pos2)) {\r\n    state.score[pId - 1]++;\r\n    setScore([...state.score]);\r\n    console.log(`Player ${pId} win!`)\r\n    resetPlayers()\r\n  }\r\n}\r\n\r\nfunction moveBullet(id, curTime) {\r\n  const { speed, angle, gravity } = preferences.shot\r\n\r\n  const { startTime, startPos, dir } = state.bullets[id]\r\n  const shotTDiff = (curTime - startTime) / 1000 // Time diff between shot moment and current moment\r\n  const moveVector = dir.clone().multiplyScalar(speed * Math.cos(angle) * shotTDiff)\r\n  state.bullets[id].position = startPos.clone().add(moveVector)\r\n  state.bullets[id].position.z = speed * Math.sin(angle) * shotTDiff /* * (2 - shotTDiff) */ - (gravity * shotTDiff * shotTDiff) / 2\r\n}\r\n\r\nfunction tryShot(pId, forceUpdate) {\r\n  state.keysPressed[pId].shot = false\r\n  const { position, lookDir, shots, balls } = state.players[pId]\r\n  if (shots <= 0)\r\n    return\r\n\r\n  const extraBalls = balls - preferences.maxBallsCount\r\n  const extraSize = extraBalls < 0 ? 0 : extraBalls * preferences.bRadiusCoef\r\n  state.bullets.push({\r\n    id: uuid(),\r\n    startPos: position.clone(),\r\n    startTime: performance.now(),\r\n    position: position.clone(),\r\n    dir: lookDir.clone(),\r\n    playerId: pId,\r\n    stale: false, // If true ignore this bullet\r\n    radius: preferences.bulletRadius + extraSize\r\n  })\r\n  state.players[pId].shots -= 1\r\n  state.players[pId].shotsReloading.push(preferences.shot.reloadingTime)\r\n\r\n  forceUpdate()\r\n}\r\n\r\nfunction bulletCollision(bullet, enemyId) {\r\n  const bulletPos = bullet.position.clone()\r\n  const bulletR = bullet.radius\r\n\r\n  const enemyPos = state.players[enemyId].position.clone()\r\n  const balls = state.players[enemyId].balls\r\n  const enemyR = getBubbleRadius(balls)\r\n\r\n  if (enemyPos.distanceTo(bulletPos) < enemyR + bulletR) {\r\n    const shooterId = bullet.playerId\r\n\r\n    state.players[enemyId].balls += 1\r\n    state.players[enemyId].shots += 1\r\n    state.players[shooterId].balls -= 1\r\n    state.players[shooterId].shots -= 1\r\n\r\n    // If new size of enemy doesn't fit to the fieldSize move enemy.\r\n    const enemy = state.players[enemyId]\r\n    const enemyR_ = getBubbleRadius(enemy.balls)\r\n\r\n    if (enemy.position.x + enemyR_ >= preferences.fieldW / 2) {\r\n      const diff = Math.abs(preferences.fieldW / 2 - (enemy.position.x + enemyR_))\r\n      state.players[enemyId].position.x -= diff + 0.1\r\n    } else if (enemy.position.x - enemyR_ <= -preferences.fieldW / 2) {\r\n      const diff = Math.abs(preferences.fieldW / 2 + (enemy.position.x - enemyR_))\r\n      state.players[enemyId].position.x += diff + 0.1\r\n    }\r\n\r\n    if (enemy.position.y + enemyR_ >= preferences.fieldH / 2) {\r\n      const diff = Math.abs(preferences.fieldH / 2 - (enemy.position.y + enemyR_))\r\n      state.players[enemyId].position.y -= diff + 0.1\r\n    } else if (enemy.position.y - enemyR_ <= -preferences.fieldH / 2) {\r\n      const diff = Math.abs(preferences.fieldH / 2 + (enemy.position.y - enemyR_))\r\n      state.players[enemyId].position.y += diff + 0.1\r\n    }\r\n\r\n    bullet.stale = true\r\n  }\r\n}\r\n\r\nfunction updateReloadings(pId, tDiff) {\r\n  const reloadings = state.players[pId].shotsReloading\r\n  state.players[pId].shotsReloading = reloadings.map(time => {\r\n    const newT = time - tDiff\r\n    if (newT <= 0) {\r\n      state.players[pId].shots += 1\r\n    }\r\n    return newT\r\n  }).filter(time => time >= 0)\r\n}\r\n\r\nlet t1 = performance.now();\r\nexport const mainCycle = (forceUpdate, setScore) => function (t2) {\r\n  const tDiff = (t2 - t1) / 1000; // Time diff between current and last frames in seconds\r\n  t1 = t2;\r\n\r\n  movePlayer(1, tDiff, setScore)\r\n  movePlayer(2, tDiff, setScore)\r\n\r\n  updateReloadings(1, tDiff)\r\n  updateReloadings(2, tDiff)\r\n\r\n  if (state.keysPressed[1].shot) {\r\n    tryShot(1, forceUpdate)\r\n  }\r\n  if (state.keysPressed[2].shot) {\r\n    tryShot(2, forceUpdate)\r\n  }\r\n\r\n  let updateIsNeeded = false\r\n  state.bullets = state.bullets.filter(bullet => {\r\n    if (bullet.position.z + preferences.bulletRadius < -200) {\r\n      updateIsNeeded = true\r\n      return false\r\n    }\r\n    return true\r\n  })\r\n\r\n  state.bullets.forEach((bullet, i) => {\r\n    moveBullet(i, t2)\r\n    !bullet.stale && bulletCollision(bullet, bullet.playerId === 1 ? 2 : 1)\r\n  })\r\n\r\n  if (updateIsNeeded) {\r\n    forceUpdate()\r\n  }\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { useFrame } from \"react-three-fiber\";\r\n\r\nimport { state, preferences } from '../state'\r\nimport { getBubbleRadius } from \"../utils\";\r\n\r\n\r\nconst CrossHair = React.memo(function({color}) {\r\n  const { speed, gravity, angle } = preferences.shot\r\n  const len = ((speed * speed) / gravity) * Math.sin(2 * angle)\r\n\r\n  const ref = useRef()\r\n  useFrame(() => {\r\n    ref.current.rotation.z += 0.04\r\n  })\r\n\r\n  return (\r\n    <mesh position={[len, 0, 1]} rotation={[0, 0, THREE.Math.degToRad(-90)]} ref={ref}>\r\n      <octahedronBufferGeometry attach=\"geometry\" args={[2, 0]} />\r\n      <meshBasicMaterial attach=\"material\" color={color} transparent={true} opacity=\"0.8\" wireframe={true}/>\r\n    </mesh>\r\n  )\r\n\r\n})\r\n\r\nexport function Bubble({ pId }) {\r\n  const ref = useRef()\r\n  const curBalls = useRef(state.players[pId].balls)\r\n  const [radius, setRadius] = useState(getBubbleRadius(curBalls.current))\r\n\r\n  const { bubbleColors, crossHairColors } = preferences;\r\n\r\n  useFrame(() => {\r\n    const mesh = ref.current\r\n    const { lookDir, position } = state.players[pId]\r\n    mesh.quaternion.setFromUnitVectors(new THREE.Vector3(1, 0, 0), lookDir.clone().normalize())\r\n    mesh.position.copy(position)\r\n    if (state.players[pId].balls !== curBalls.current) {\r\n      curBalls.current = state.players[pId].balls\r\n      const newR = getBubbleRadius(curBalls.current)\r\n      setRadius(newR)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <group ref={ref}>\r\n      <mesh receiveShadow={true}>\r\n        <sphereGeometry attach=\"geometry\" args={[radius, 32, 32]} />\r\n        <meshLambertMaterial attach=\"material\" color={bubbleColors[pId - 1]} />\r\n      </mesh>\r\n      <mesh position={[radius + 3, 0, 0]} rotation={[0, 0, THREE.Math.degToRad(-90)]}>\r\n        <coneBufferGeometry attach=\"geometry\" args={[2, 4, 15]} />\r\n        <meshBasicMaterial attach=\"material\" color={bubbleColors[pId - 1]} transparent={true} opacity=\"0.5\" />\r\n      </mesh>\r\n      <CrossHair color={crossHairColors[pId - 1]} />\r\n    </group>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { preferences } from \"../state\";\r\n\r\nexport function Surface () {\r\n  return (\r\n    <mesh position={[0, 0, 0]} receiveShadow={true}>\r\n      <planeGeometry attach=\"geometry\" args={[window.innerWidth, window.innerHeight, 32]} />\r\n      <meshStandardMaterial attach=\"material\" color=\"#1781a4\" />\r\n    </mesh>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useFrame } from \"react-three-fiber\";\r\n\r\nimport { preferences, state } from '../state'\r\n\r\nexport function Bullet({ pId, id }) {\r\n  const [position] = useState(state.bullets[id].position)\r\n  const ref = useRef()\r\n\r\n  const curRadius = useRef(state.bullets[id].radius)\r\n  const [radius, setRadius] = useState(state.bullets[id].radius)\r\n\r\n  useFrame(() => {\r\n    const mesh = ref.current\r\n    const { position } = state.bullets[id]\r\n    mesh.position.copy(position)\r\n\r\n    if (state.bullets[id].radius !== curRadius.current) {\r\n      curRadius.current = state.players[pId].balls\r\n      setRadius(curRadius.current)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <mesh ref={ref} position={position} castShadow={true} receiveShadow={false}>\r\n      <sphereGeometry attach=\"geometry\" args={[radius, 32, 32]} />\r\n      <meshLambertMaterial attach=\"material\" color={preferences.bulletColors[pId - 1]} />\r\n    </mesh>\r\n  )\r\n}","import React, { useState } from \"react\";\r\nimport { preferences } from \"../state\";\r\nimport * as THREE from 'three';\r\nimport { useFrame } from \"react-three-fiber\";\r\n\r\n\r\nconst getRandomFloat = function (min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\nconst { fieldW, fieldH } = preferences;\r\nconst randSize = () => Math.floor(Math.random() * 3) + 1;\r\nconst randOpacity = () => Math.abs(Math.random() - 0.2);\r\nconst randPosition = () => [\r\n  getRandomFloat(-fieldW / 1.5, fieldW / 1.5),\r\n  getRandomFloat(-fieldH / 1.5, fieldH / 1.5),\r\n  0.1\r\n];\r\n\r\nexport function Wave() {\r\n  const [rands, setRands] = useState({ position: randPosition(), size: randSize() });\r\n  const [opacity, setOpacity] = useState(randOpacity());\r\n  const [initOpacity] = useState(opacity);\r\n  const [nextOpacity, setNextOpacity] = useState(0);\r\n  const [toZero, switchOpacityDir] = useState(true);\r\n\r\n  useFrame((state, delta) => {\r\n    let step = 1 / ((initOpacity < 0.4 ? 8 : 3) / delta);\r\n\r\n    if (toZero && nextOpacity < 0) {\r\n      setOpacity(0);\r\n      setRands({ ...rands, position: randPosition() });\r\n      switchOpacityDir(0);\r\n      setNextOpacity(nextOpacity + step);\r\n    } else if (!toZero && nextOpacity > initOpacity) {\r\n      setOpacity(initOpacity);\r\n      switchOpacityDir(1);\r\n      setNextOpacity(nextOpacity - step);\r\n    } else {\r\n      setOpacity(nextOpacity);\r\n      setNextOpacity(nextOpacity + (toZero ? -step : step));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <mesh position={rands.position} rotation={[0, 0, THREE.Math.degToRad(-90)]}>\r\n      <circleGeometry attach=\"geometry\" args={[rands.size, 6]}/>\r\n      <meshBasicMaterial attach=\"material\" color=\"#ffffff\" transparent opacity={opacity} />\r\n    </mesh>\r\n  );\r\n}\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { preferences } from \"../state\";\r\n\r\nconst height = 4\r\nconst width = 5\r\nconst lenOffset = 10\r\nfunction Border({ start, end, negOffset = false, gate = false }) {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    const mesh = ref.current\r\n\r\n    const dir = end.clone().sub(start).normalize()\r\n    const xDir = new THREE.Vector3(1, 0, 0)\r\n    mesh.quaternion.setFromUnitVectors(xDir, dir)\r\n\r\n    const wOffset = width / 2\r\n    const gateOffset = preferences.gateWidth / 2\r\n    mesh.geometry.translate(gate ? gateOffset : 0, negOffset ? -wOffset : wOffset, 0)\r\n  }, [end, start, negOffset, gate])\r\n\r\n  const len = end.distanceTo(start) + lenOffset * (gate ? 1 : 2)\r\n\r\n  return (\r\n    <mesh ref={ref} position={start.clone().lerp(end, 0.5)} >\r\n      <boxBufferGeometry attach=\"geometry\" args={[len, width, height]} />\r\n      <meshStandardMaterial attach=\"material\" color=\"#e1eaed\" />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nfunction Point({ position }) {\r\n  return (\r\n    <mesh position={position}>\r\n      <sphereGeometry attach=\"geometry\" args={[preferences.bulletRadius, 32, 32]} />\r\n      <meshLambertMaterial attach=\"material\" color=\"black\" />\r\n    </mesh>\r\n  )\r\n}\r\n\r\nexport const Field = React.memo(function() {\r\n  const p1 = new THREE.Vector3(-preferences.fieldW / 2, preferences.fieldH / 2, 0)\r\n  const p2 = new THREE.Vector3(preferences.fieldW / 2, preferences.fieldH / 2, 0)\r\n  const p3 = new THREE.Vector3(preferences.fieldW / 2, -preferences.fieldH / 2, 0)\r\n  const p4 = new THREE.Vector3(-preferences.fieldW / 2, -preferences.fieldH / 2, 0)\r\n\r\n  const gateBot = new THREE.Vector3(-preferences.fieldW / 2, -preferences.gateWidth / 2, 0)\r\n  const gateUp = new THREE.Vector3(-preferences.fieldW / 2, preferences.gateWidth / 2, 0)\r\n\r\n  return (\r\n    <>\r\n      {/* <Point position={p1} />\r\n      <Point position={p2} />\r\n      <Point position={p3} />\r\n      <Point position={p4} />\r\n\r\n      <Point position={gateBot} />\r\n      <Point position={gateUp} /> */}\r\n\r\n      <Border start={p1} end={p2} />\r\n      <Border start={p2} end={p3} />\r\n      <Border start={p4} end={p3} negOffset />\r\n\r\n      <Border start={gateUp} end={p1} gate />\r\n      <Border start={gateBot} end={p4} gate negOffset/>\r\n    </>\r\n  );\r\n})\r\n","import React, { useState } from \"react\";\r\nimport { state } from \"../state\";\r\nimport { useFrame } from \"react-three-fiber\";\r\n\r\nexport function WaterCircles({ bullet }) {\r\n  const [ c1NextState, setC1NextState ] = useState({ opacity: 0.6, r1: bullet.radius, r2: bullet.radius + 0.8 });\r\n  const [ c2NextState, setC2NextState ] = useState({ opacity: 0.6, r1: bullet.radius, r2: bullet.radius + 0.8 });\r\n  const [ visible, setVisibility ] = useState(false);\r\n  const [ position, setPosition ] = useState(null);\r\n\r\n  useFrame((st, delta) => {\r\n    if (bullet.position.z > -10)\r\n      return;\r\n\r\n    if (!position)\r\n      setPosition({ x: bullet.position.x, y: bullet.position.y });\r\n\r\n    setVisibility(true);\r\n      \r\n    if (delta <= 0 || c2NextState.opacity <= 0)\r\n      return;\r\n\r\n    let c1step = 1 / (0.6 / delta),\r\n        c2step = 1 / (0.6 / delta),\r\n        { opacity: c1Opacity, r1: c1R1, r2: c1R2 } = c1NextState,\r\n        { opacity: c2Opacity, r1: c2R1, r2: c2R2 } = c2NextState;\r\n\r\n    setC1NextState({ opacity: c1Opacity - c1step, r1: c1R1 + c1step + 0.2, r2: c1R2 + c1step + 0.2 });\r\n    if (c1NextState.opacity < 0.3)\r\n      setC2NextState({ opacity: c2Opacity - c2step, r1: c2R1 + c2step, r2: c2R2 + c2step });\r\n  });\r\n\r\n  return (\r\n    visible ?\r\n      <group position={[position.x, position.y, 0.1]}>\r\n        <mesh>\r\n          <ringGeometry attach=\"geometry\" args={[ c1NextState.r1, c1NextState.r2, 24, 1 ]} />\r\n          <meshBasicMaterial attach=\"material\" color=\"#ffffff\" opacity={c1NextState.opacity} transparent/>\r\n        </mesh>\r\n        <mesh>\r\n          <ringGeometry attach=\"geometry\" args={[ c2NextState.r1, c2NextState.r2, 24, 1 ]} />\r\n          <meshBasicMaterial attach=\"material\" color=\"#ffffff\" opacity={c2NextState.opacity} transparent/>\r\n        </mesh>\r\n      </group>\r\n      :\r\n      null\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nconst bubbleColors = ['red', 'lightgreen'];\r\n\r\nexport function Score({ score }) {\r\n  return (\r\n    <div className=\"score\">\r\n      <h1 className=\"score__text\">Score: <span style={{ color: bubbleColors[1] }}>{score[1]}</span> / <span style={{ color: bubbleColors[0] }}>{score[0]}</span></h1>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Canvas, addEffect } from \"react-three-fiber\";\r\nimport DatGui, { DatNumber } from 'react-dat-gui';\r\nimport './index.css';\r\n\r\nimport { mainCycle } from './cycle'\r\nimport { preferences, state } from './state'\r\nimport { Bubble } from './components/Bubble'\r\nimport { Surface } from './components/Surface'\r\nimport { keyDown, keyUp } from './utils'\r\nimport { Bullet } from \"./components/Bullet\";\r\nimport { Wave } from './components/Wave'\r\nimport { Field } from './components/Field';\r\nimport { WaterCircles } from \"./components/WaterCircles\";\r\nimport { Score } from './components/Score';\r\n\r\nimport './style.css';\r\n\r\nfunction useForceUpdate() {\r\n  const [, forceUpdate] = useState()\r\n\r\n  return useCallback(() => forceUpdate({}), [])\r\n}\r\n\r\nfunction App() {\r\n  const [prefs, updatePrefs] = useState(preferences);\r\n  const [score, setScore] = useState([0, 0]);\r\n  const forceUpdate = useForceUpdate()\r\n  \r\n  useEffect(() => {\r\n    for (let prop in prefs)\r\n      preferences[prop] = prefs[prop];\r\n  }, [prefs]);\r\n\r\n  useEffect(() => {\r\n    addEffect(mainCycle(forceUpdate, setScore));\r\n    window.addEventListener(\"keyup\", keyUp);\r\n    window.addEventListener(\"keydown\", keyDown);\r\n  }, []);\r\n  const skyColor = \"0xffffff\";\r\n  const groundColor = \"#888888\";\r\n  return (\r\n    <div>\r\n      {/* <DatGui data={prefs} onUpdate={updatePrefs}>\r\n        <DatNumber path=\"maxSpeed\" label=\"maxSpeed\" min={0} max={400} step={1} />\r\n        <DatNumber path=\"accel\" label=\"accel\" min={0} max={400} step={1} />\r\n        <DatNumber path=\"friction\" label=\"friction\" min={0} max={400} step={0.1} />\r\n        <DatNumber path=\"rotateSpeed\" label=\"rotateSpeed\" min={0} max={360} step={1} />\r\n        <DatNumber path=\"skiddingC\" label=\"skiddingC\" min={0} max={400} step={0.1} />\r\n      </DatGui> */}\r\n      <Canvas\r\n        style={{ height: window.innerHeight }}\r\n        camera={{ fov: 30, position: [0, -400, 340] }}\r\n        onCreated={({ camera }) => camera.lookAt(0, 0, 0)}\r\n        shadowMap={true}\r\n      >\r\n        <ambientLight intensity={0.1} />\r\n        <pointLight position={[0, 0, 160]} intensity={0.4} castShadow={true} distance={360}/>\r\n        <hemisphereLight skyColor={skyColor} groundColor={groundColor} intensity={0.7} />\r\n        <directionalLight position={[0, 0, 200]} intensity={0.5} />\r\n        <Surface color={prefs.colorSurf} />\r\n        <Bubble pId={1} color={prefs.color1} />\r\n        <Bubble pId={2} color={prefs.color2} />\r\n        { state.bullets.map((bullet, idx) => <Bullet key={bullet.id} id={idx} pId={bullet.playerId} />) }\r\n        { state.bullets.map((bullet, idx) => <WaterCircles key={bullet.id + 1} bullet={bullet} />) }\r\n        { Array.from(Array(20)).map((x, i) => <Wave key={i} />) }\r\n        <Field />\r\n      </Canvas>\r\n      <Score score={score}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}